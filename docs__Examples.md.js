(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[2],{Dufc:function(e,n,t){"use strict";t.r(n);var a=t("0Owb"),r=t("q1tI"),i=t.n(r),o=(t("B2uJ"),t("+su7"),t("5Yjd")),l=t.n(o),s=i.a.memo((function(){var e=t("K+nK"),n=e(t("q1tI")),a=e(t("LfxP")),r=function(){return n["default"].createElement(a["default"],{subject:"examples"})};return n["default"].createElement(r)})),c=i.a.memo((function(){var e=t("K+nK"),n=e(t("q1tI")),a=e(t("Dzc9")),r={coordinations:["select in with-transformation-example1-chart1 and with-transformation-example1-chart2, then intersect with $1 and $2, then select in with-transformation-example1-chart3"],visualizations:[{id:"with-transformation-example1-chart1",container:"1 1 1 1",visualization:"scatterplot",props:{data:"cars",x:"Cylinders",y:"Weight_in_lbs"}},{id:"with-transformation-example1-chart2",container:"1 1 2 2",visualization:"scatterplot",props:{data:"cars",x:"Acceleration",y:"Horsepower"}},{id:"with-transformation-example1-chart3",container:"1 1 3 3",visualization:"scatterplot",props:{data:"cars",x:"Miles_per_Gallon",y:"Displacement"}}],layout:{width:"900px",height:"300px",rows:["1fr"],columns:["1fr","1fr","1fr"]},data:[{name:"cars",path:"/data/cars.json"}]},i=function(){return n["default"].createElement(a["default"],{spec:r,target:"#with-transformation-example1"})};return n["default"].createElement(i)})),m=i.a.memo((function(){var e=t("K+nK"),n=e(t("q1tI")),a=e(t("Dzc9")),r={coordinations:["select items in select-set-example2-chart1, then set data in select-set-example2-chart2"],visualizations:[{id:"select-set-example2-chart1",visualization:"scatterplot",container:"1 1 1 1",props:{data:"cars",x:"economy (mpg)",y:"cylinders"}},{id:"select-set-example2-chart2",visualization:"scatterplot",container:"1 1 2 2",props:{data:"cars",x:"economy (mpg)",y:"cylinders",shouldUpdateScales:!1}}],layout:{width:"700px",height:"350px",rows:["1fr"],columns:["1fr","1fr"]},data:[{name:"cars",path:"https://nebula-vis.github.io/data/cars.csv",format:"csv"}]},i=function(){return n["default"].createElement(a["default"],{spec:r,target:"#select-set-example2"})};return n["default"].createElement(i)})),p=i.a.memo((function(){var e=t("K+nK"),n=e(t("q1tI")),a=e(t("Dzc9")),r={coordinations:["select items in select-filter-example1-chart1, then filter items in select-filter-example1-chart2"],visualizations:[{id:"select-filter-example1-chart1",visualization:"scatterplot",container:"1 1 1 1",props:{data:"cars",x:"economy (mpg)",y:"cylinders"}},{id:"select-filter-example1-chart2",visualization:"scatterplot",container:"1 1 2 2",props:{data:"cars",x:"economy (mpg)",y:"cylinders"}}],layout:{width:"700px",height:"350px",rows:["1fr"],columns:["1fr","1fr"]},data:[{name:"cars",path:"/data/cars.csv",format:"csv"}]},i=function(){return n["default"].createElement(a["default"],{spec:r,target:"#select-filter-example1"})};return n["default"].createElement(i)})),d=i.a.memo((function(){var e=t("K+nK"),n=e(t("q1tI")),a=e(t("Dzc9")),r={coordinations:["select items in select-navigate-example1-chart1, then navigate ranges in select-navigate-example1-chart2"],visualizations:[{id:"select-navigate-example1-chart1",visualization:"scatterplot",container:"1 1 1 1",props:{data:"cars",x:"economy (mpg)",y:"cylinders"}},{id:"select-navigate-example1-chart2",visualization:"scatterplot",container:"1 1 2 2",props:{data:"cars",x:"economy (mpg)",y:"cylinders"}}],layout:{width:"700px",height:"350px",rows:["1fr"],columns:["1fr","1fr"]},data:[{name:"cars",path:"/data/cars.csv",format:"csv"}]},i=function(){return n["default"].createElement(a["default"],{spec:r,target:"#select-navigate-example1"})};return n["default"].createElement(i)})),u=i.a.memo((function(){var e=t("K+nK"),n=e(t("q1tI")),a=e(t("Dzc9")),r={coordinations:["select items in select-navigate-example2-chart1, then navigate ranges in select-navigate-example2-chart2"],visualizations:[{id:"select-navigate-example2-chart1",visualization:"scatterplot",container:"1 1 1 1",props:{data:"houses",x:"lng1",y:"lat1"}},{id:"select-navigate-example2-chart2",visualization:"map",container:"1 1 2 2",props:{data:"houses",x:"lng1",y:"lat1",brushType:"xy",bottomEdge:"bottom",circleColor:"#80B1D3",mapStyle:{mapLayerStyle:"//map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetGray/MapServer/tile/{z}/{y}/{x}",annotionLayerStyle:"http://t{s}.tianditu.com/DataServer?T=eva_w&X={x}&Y={y}&L={z}&tk={key}",minZoom:3,maxZoom:20,centerPoint:[30.2708376789,120.130177269],zoom:10,zoomControl:!1,attributionControl:!1}}}],layout:{width:"700px",height:"350px",rows:["1fr"],columns:["1fr","1fr"]},data:[{name:"houses",path:"/data/houses.json"}]},i=function(){return n["default"].createElement(a["default"],{spec:r,target:"#select-navigate-example2"})};return n["default"].createElement(i)})),h=i.a.memo((function(){var e=t("K+nK"),n=e(t("q1tI")),a=e(t("Dzc9")),r={coordinations:["navigate ranges in navigate-navigate-example1-chart1, then navigate ranges in navigate-navigate-example1-chart2"],visualizations:[{id:"navigate-navigate-example1-chart1",visualization:"map",container:"1 1 1 1",props:{data:"houses",x:"lng1",y:"lat1",brushType:"xy",bottomEdge:"bottom",circleColor:"#80B1D3",mapStyle:{mapLayerStyle:"//map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetGray/MapServer/tile/{z}/{y}/{x}",annotionLayerStyle:"http://t{s}.tianditu.com/DataServer?T=eva_w&X={x}&Y={y}&L={z}&tk={key}",minZoom:3,maxZoom:20,centerPoint:[30.2708376789,120.130177269],zoom:10,zoomControl:!1,attributionControl:!1}}},{id:"navigate-navigate-example1-chart2",visualization:"scatterplot",container:"1 1 3 3",props:{data:"houses",x:"lng1",y:"lat1"}}],layout:{width:"750px",height:"350px",rows:["1fr"],columns:["1fr","50px","1fr"]},data:[{name:"houses",path:"/data/houses.json"}]},i=function(){return n["default"].createElement(a["default"],{spec:r,target:"#navigate-navigate-example1"})};return n["default"].createElement(i)})),x=i.a.memo((function(){var e=t("K+nK"),n=e(t("q1tI")),a=e(t("Dzc9")),r={coordinations:[{"data-visualization":[{name:"$d1",bind:["navigate-select-example1-chart1.visibleRange"]},{name:"$d2",bind:["navigate-select-example1-chart2.data"]},{name:"$d3",bind:["navigate-select-example1-chart2.selection.unidirectional"]}],transformation:{name:"ranges-to-items",input:["$d1","$d2"],output:["$d3"]}}],visualizations:[{id:"navigate-select-example1-chart1",visualization:"map",container:"1 1 1 1",props:{data:"houses",x:"lng1",y:"lat1",brushType:"xy",bottomEdge:"bottom",circleColor:"#80B1D3",mapStyle:{mapLayerStyle:"//map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetGray/MapServer/tile/{z}/{y}/{x}",annotionLayerStyle:"http://t{s}.tianditu.com/DataServer?T=eva_w&X={x}&Y={y}&L={z}&tk={key}",minZoom:3,maxZoom:20,centerPoint:[30.2708376789,120.130177269],zoom:10,zoomControl:!1,attributionControl:!1}}},{id:"navigate-select-example1-chart2",visualization:"scatterplot",container:"1 1 3 3",props:{data:"houses",x:"lng1",y:"lat1"}}],layout:{width:"750px",height:"350px",rows:["1fr"],columns:["1fr","50px","1fr"]},data:[{name:"houses",path:"/data/houses.json"}]},i=function(){return n["default"].createElement(a["default"],{spec:r,target:"#navigate-select-example1"})};return n["default"].createElement(i)})),g=i.a.memo((function(){var e=t("K+nK"),n=e(t("q1tI")),a=e(t("Dzc9")),r={coordinations:["set value in encode-encode-example1-slider, then encode size in encode-encode-example1-chart1 and encode-encode-example1-chart2"],visualizations:[{id:"encode-encode-example1-slider",visualization:"slider",container:"1 1 1 1",props:{min:1,max:10,value:4}},{id:"encode-encode-example1-chart1",visualization:"scatterplot",container:"1 1 2 2",props:{data:"cars"}},{id:"encode-encode-example1-chart2",visualization:"scatterplot",container:"1 1 3 3",props:{data:"cars",x:"power (hp)",y:"0-60 mph (s)"}}],layout:{width:"750px",height:"300px",rows:["1fr"],columns:["150px","300px","300px"]},data:[{name:"cars",path:"https://nebula-vis.github.io/data/cars.csv",format:"csv"}]},i=function(){return n["default"].createElement(a["default"],{spec:r,target:"#encode-encode-example1"})};return n["default"].createElement(i)})),f=i.a.memo((function(){var e=t("K+nK"),n=e(t("q1tI")),a=e(t("Dzc9")),r={coordinations:["reconfigure order in reconfigure-reconfigure-example1-chart1, then reconfigure order in reconfigure-reconfigure-example1-chart2"],visualizations:[{id:"reconfigure-reconfigure-example1-chart1",container:"1 1 1 1",visualization:"lineup",props:{data:"cars",order:["economy (mpg)","displacement (cc)","power (hp)"],color:["#66c2a5","#fc8d62","#8da0cb"]}},{id:"reconfigure-reconfigure-example1-chart2",container:"1 1 3 3",visualization:"barchart",props:{data:"cars",x:"year",y:["economy (mpg)","displacement (cc)","power (hp)"],color:["#66c2a5","#fc8d62","#8da0cb"],aggregate:["average","average","average","average"],count:6,stacked:!0}}],layout:{width:"800px",height:"350px",rows:["1fr"],columns:["1fr","50px","350px"]},data:[{name:"cars",path:"/data/cars.csv",format:"csv"}]},i=function(){return n["default"].createElement(a["default"],{spec:r,target:"#reconfigure-reconfigure-example1"})};return n["default"].createElement(i)})),v=i.a.memo((function(){var e=t("K+nK"),n=e(t("q1tI")),a=e(t("Dzc9")),r={coordinations:["select items in map, then set data in histo-top, histo-left, stackedbar-right, and stackedbar-bottom, select items in lineup","navigate ranges in map, then navigate ranges in histo-top, histo-left, stackedbar-right, stackedbar-bottom","navigate items in map, then set data in lineup","reconfigure order in lineup, then encode y in stackedbar-right, stackedbar-bottom"],visualizations:[{id:"map",container:"2 2 2 2",visualization:"map",props:{data:"houses",x:"lng1",y:"lat1",brushType:"xy",bottomEdge:"bottom",circleColor:"#80B1D3",mapStyle:{mapLayerStyle:"//map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetGray/MapServer/tile/{z}/{y}/{x}",annotionLayerStyle:"http://t{s}.tianditu.com/DataServer?T=eva_w&X={x}&Y={y}&L={z}&tk={key}",minZoom:3,maxZoom:20,centerPoint:[30.2708376789,120.130177269],zoom:10,zoomControl:!1,attributionControl:!1}}},{id:"histo-top",container:"1 1 2 2",visualization:"barchart",props:{data:"houses",x:"lng1",aggregate:"max",y:"Floor Size",count:100,bottomEdge:"bottom",margin:{right:0,left:0,top:0,bottom:5},isDisplay:!1}},{id:"histo-left",container:"2 2 1 1",visualization:"barchart",props:{data:"houses",x:"lat1",aggregate:"count",count:100,bottomEdge:"right",margin:{right:0,left:0,top:0,bottom:5},isDisplay:!1}},{id:"stackedbar-right",container:"2 2 3 3",visualization:"barchart",props:{data:"houses",x:"lat1",y:["Living Rooms","Bedrooms","Floor Size"],aggregate:["sum","sum","max"],scaleY:[1,1,.01],count:100,color:["#fc8d62","#8da0cb","#a6d854"],bottomEdge:"left-mirror",margin:{right:0,left:0,top:0,bottom:5},stacked:!0,isDisplay:!1}},{id:"stackedbar-bottom",container:"3 3 2 2",visualization:"barchart",props:{data:"houses",x:"lng1",y:["Living Rooms","Bedrooms","Floor Size"],aggregate:["sum","sum","max"],scaleY:[1,1,.01],count:100,color:["#fc8d62","#8da0cb","#a6d854"],bottomEdge:"top-mirror",margin:{right:0,left:0,top:0,bottom:5},stacked:!0,isDisplay:!1}},{id:"lineup",container:"1 3 4 4",visualization:"lineup",props:{data:"houses",order:["Living Rooms","Bedrooms","Floor Size"],color:["#fc8d62","#8da0cb","#a6d854"]}}],layout:{width:"1250px",height:"800px",rows:["100px","800px","100px"],columns:["100px","600px","100px","1fr"]},data:[{name:"houses",path:"https://nebula-vis.github.io/data/houses.json"}]},i=function(){return n["default"].createElement(a["default"],{spec:r,target:"#srvis",position:"vertical"})};return n["default"].createElement(i)}));n["default"]=function(){return i.a.createElement(i.a.Fragment,null,i.a.createElement("div",{className:"markdown"}),i.a.createElement(l.a,Object(a["a"])({source:{tsx:"import React from 'react'\nimport CoverHeader from '@/CoverHeader.tsx'\nexport default () => <CoverHeader subject=\"examples\" />",jsx:"import React from 'react';\nimport CoverHeader from '@/CoverHeader.tsx';\n\nexport default () => <CoverHeader subject=\"examples\" />;\n"}},{inline:!0,dependencies:{"@umijs/babel-preset-umi":"3.1.3"},files:{"src/CoverHeader.tsx":{path:"@/CoverHeader.tsx",content:"import React from 'react'\nimport { Link } from 'umi'\n\nexport default class Editor extends React.Component<{ subject: string }> {\n  constructor(props) {\n    super(props)\n  }\n\n  componentDidMount() {\n    document\n      .querySelectorAll('span[data-updated-text]')\n      .forEach(node => node.setAttribute('style', 'display:none'))\n  }\n\n  render() {\n    return (\n      <div\n        style={{\n          position: 'fixed',\n          left: 0,\n          fontSize: '16px',\n          top: 0,\n          width: '100vw',\n          height: '84px',\n          overflowY: 'auto',\n          zIndex: 9999,\n          backgroundColor: 'white',\n          boxShadow: '0 0 5px #00000080',\n        }}\n      >\n        <header\n          style={{\n            width: '100%',\n            height: '84px',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            position: 'absolute',\n            color: '#BFBFBF',\n            left: 0,\n            right: 0,\n            top: 0,\n            zIndex: 1,\n          }}\n        >\n          <div\n            className=\"header-left\"\n            style={{\n              paddingLeft: '48px',\n              display: 'flex',\n              justifyContent: 'flex-start',\n              alignItems: 'center',\n              fontWeight: 600,\n            }}\n          >\n            <a\n              href=\"/\"\n              style={{\n                fontSize: '1.6rem',\n                color: '#1D39C4',\n                marginRight: '167px',\n              }}\n            >\n              Nebula\n            </a>\n            <span\n              style={{\n                width: '1px',\n                height: '2rem',\n                borderRight: '1px solid #BFBFBF',\n              }}\n            />\n            {/* <a\n              href=\"/tutorial\"\n              style={{\n                marginLeft: '2.8vw',\n                color:\n                  this.props.subject === 'tutorial' ? '#1D39C4' : 'inherit',\n              }}\n            >\n              Tutorial\n            </a> */}\n            {/* <a\n              href=\"/docs\"\n              style={{\n                marginLeft: '2.8vw',\n                color: this.props.subject === 'docs' ? '#1D39C4' : 'inherit',\n              }}\n            >\n              Docs\n            </a> */}\n            <a\n              href=\"/examples\"\n              style={{\n                marginLeft: '2.8vw',\n                color:\n                  this.props.subject === 'examples' ? '#1D39C4' : 'inherit',\n              }}\n            >\n              Examples\n            </a>\n            <a\n              href=\"/survey\"\n              style={{\n                marginLeft: '2.8vw',\n                color: this.props.subject === 'survey' ? '#1D39C4' : 'inherit',\n              }}\n            >\n              Survey\n            </a>\n          </div>\n          <div\n            className=\"header-right\"\n            style={{\n              paddingLeft: '48px',\n              display: 'flex',\n              justifyContent: 'flex-end',\n              alignItems: 'center',\n              fontWeight: 600,\n            }}\n          >\n            <a\n              href=\"https://github.com/nebula-vis/Nebula\"\n              style={{ color: 'inherit', marginRight: '2.8vw' }}\n            >\n              Github\n            </a>\n            {/* <a\n              href=\"/editor\"\n              style={{\n                marginRight: '2.8vw',\n                color: this.props.subject === 'editor' ? '#1D39C4' : 'inherit',\n              }}\n            >\n              Editor\n            </a> */}\n            {/* <a\n              href=\"/404\"\n              style={{\n                marginRight: '2.8vw',\n                color: 'inherit',\n              }}\n            >\n              Zh\n            </a> */}\n          </div>\n        </header>\n      </div>\n    )\n  }\n}\n"}}}),i.a.createElement(s,null)),i.a.createElement("div",{className:"markdown"},i.a.createElement("h1",{id:"examples"},i.a.createElement("a",{"aria-hidden":"true",href:"#examples"},i.a.createElement("span",{className:"icon icon-link"})),"Examples"),i.a.createElement("h2",{id:"1-select-with-intersect"},i.a.createElement("a",{"aria-hidden":"true",href:"#1-select-with-intersect"},i.a.createElement("span",{className:"icon icon-link"})),"1. Select with Intersect"),i.a.createElement("p",null,"The points highlighted in the third scatterplot are the intersection of the selected points in the first and the second scatterplots."),i.a.createElement("pre",null,i.a.createElement("code",null,'"Select items in scatterplot1 and scatterplot2,',i.a.createElement("br",null),' then intersect, then highlight items in scatterplot3."',i.a.createElement("br",null))),i.a.createElement("div",{id:"with-transformation-example1"})),i.a.createElement(l.a,Object(a["a"])({source:{tsx:"import React from 'react'\nimport NebulaExample from '@/AsyncNebulaExample.tsx'\nconst spec = {\n  coordinations: [\n    'select in with-transformation-example1-chart1 and with-transformation-example1-chart2, then intersect with $1 and $2, then select in with-transformation-example1-chart3',\n  ],\n  visualizations: [\n    {\n      id: 'with-transformation-example1-chart1',\n      container: '1 1 1 1',\n      visualization: 'scatterplot',\n      props: {\n        data: 'cars',\n        x: 'Cylinders',\n        y: 'Weight_in_lbs',\n      },\n    },\n    {\n      id: 'with-transformation-example1-chart2',\n      container: '1 1 2 2',\n      visualization: 'scatterplot',\n      props: {\n        data: 'cars',\n        x: 'Acceleration',\n        y: 'Horsepower',\n      },\n    },\n    {\n      id: 'with-transformation-example1-chart3',\n      container: '1 1 3 3',\n      visualization: 'scatterplot',\n      props: {\n        data: 'cars',\n        x: 'Miles_per_Gallon',\n        y: 'Displacement',\n      },\n    },\n  ],\n  layout: {\n    width: '900px',\n    height: '300px',\n    rows: ['1fr'],\n    columns: ['1fr', '1fr', '1fr'],\n  },\n  data: [\n    {\n      name: 'cars',\n      path: '/data/cars.json',\n    },\n  ],\n}\n\nexport default () => (\n  <NebulaExample spec={spec} target=\"#with-transformation-example1\" />\n)",jsx:"import React from 'react';\nimport NebulaExample from '@/AsyncNebulaExample.tsx';\n\nconst spec = {\n  coordinations: [\n    'select in with-transformation-example1-chart1 and with-transformation-example1-chart2, then intersect with $1 and $2, then select in with-transformation-example1-chart3',\n  ],\n  visualizations: [\n    {\n      id: 'with-transformation-example1-chart1',\n      container: '1 1 1 1',\n      visualization: 'scatterplot',\n      props: {\n        data: 'cars',\n        x: 'Cylinders',\n        y: 'Weight_in_lbs',\n      },\n    },\n    {\n      id: 'with-transformation-example1-chart2',\n      container: '1 1 2 2',\n      visualization: 'scatterplot',\n      props: {\n        data: 'cars',\n        x: 'Acceleration',\n        y: 'Horsepower',\n      },\n    },\n    {\n      id: 'with-transformation-example1-chart3',\n      container: '1 1 3 3',\n      visualization: 'scatterplot',\n      props: {\n        data: 'cars',\n        x: 'Miles_per_Gallon',\n        y: 'Displacement',\n      },\n    },\n  ],\n  layout: {\n    width: '900px',\n    height: '300px',\n    rows: ['1fr'],\n    columns: ['1fr', '1fr', '1fr'],\n  },\n  data: [\n    {\n      name: 'cars',\n      path: '/data/cars.json',\n    },\n  ],\n};\nexport default () => <NebulaExample spec={spec} target=\"#with-transformation-example1\" />;\n"}},{inline:!0,dependencies:{"@umijs/babel-preset-umi":"3.1.3",umi:"3.1.3"},files:{"src/AsyncNebulaExample.tsx":{path:"@/AsyncNebulaExample.tsx",content:"import { dynamic } from 'umi'\nexport default dynamic({\n  loader: async function() {\n    const { default: NebulaExample } = await import(\n      /* webpackChunkName: \"nebula_example\" */ './NebulaExample'\n    )\n    return NebulaExample\n  },\n})\n"}}}),i.a.createElement(c,null)),i.a.createElement("div",{className:"markdown"},i.a.createElement("h2",{id:"2-select-set"},i.a.createElement("a",{"aria-hidden":"true",href:"#2-select-set"},i.a.createElement("span",{className:"icon icon-link"})),"2. Select-Set"),i.a.createElement("p",null,"A example of Select \u2192 Set coordinations in two scatterplots, where the selection of the first scatterplot will modify the dataset in the second scatterplot."),i.a.createElement("pre",null,i.a.createElement("code",null,'"Select items in scatterplot1,',i.a.createElement("br",null),' then set dataset in scatterplot2."',i.a.createElement("br",null))),i.a.createElement("div",{id:"select-set-example2"})),i.a.createElement(l.a,Object(a["a"])({source:{tsx:"import React from 'react'\nimport NebulaExample from '@/AsyncNebulaExample.tsx'\nconst spec = {\n  coordinations: [\n    'select items in select-set-example2-chart1, then set data in select-set-example2-chart2',\n  ],\n  visualizations: [\n    {\n      id: 'select-set-example2-chart1',\n      visualization: 'scatterplot',\n      container: '1 1 1 1',\n      props: {\n        data: 'cars',\n        x: 'economy (mpg)',\n        y: 'cylinders',\n      },\n    },\n    {\n      id: 'select-set-example2-chart2',\n      visualization: 'scatterplot',\n      container: '1 1 2 2',\n      props: {\n        data: 'cars',\n        x: 'economy (mpg)',\n        y: 'cylinders',\n        shouldUpdateScales: false,\n      },\n    },\n  ],\n  layout: {\n    width: '700px',\n    height: '350px',\n    rows: ['1fr'],\n    columns: ['1fr', '1fr'],\n  },\n  data: [\n    {\n      name: 'cars',\n      path: 'https://nebula-vis.github.io/data/cars.csv',\n      format: 'csv',\n    },\n  ],\n}\n\nexport default () => <NebulaExample spec={spec} target=\"#select-set-example2\" />",jsx:"import React from 'react';\nimport NebulaExample from '@/AsyncNebulaExample.tsx';\n\nconst spec = {\n  coordinations: [\n    'select items in select-set-example2-chart1, then set data in select-set-example2-chart2',\n  ],\n  visualizations: [\n    {\n      id: 'select-set-example2-chart1',\n      visualization: 'scatterplot',\n      container: '1 1 1 1',\n      props: {\n        data: 'cars',\n        x: 'economy (mpg)',\n        y: 'cylinders',\n      },\n    },\n    {\n      id: 'select-set-example2-chart2',\n      visualization: 'scatterplot',\n      container: '1 1 2 2',\n      props: {\n        data: 'cars',\n        x: 'economy (mpg)',\n        y: 'cylinders',\n        shouldUpdateScales: false,\n      },\n    },\n  ],\n  layout: {\n    width: '700px',\n    height: '350px',\n    rows: ['1fr'],\n    columns: ['1fr', '1fr'],\n  },\n  data: [\n    {\n      name: 'cars',\n      path: 'https://nebula-vis.github.io/data/cars.csv',\n      format: 'csv',\n    },\n  ],\n};\nexport default () => <NebulaExample spec={spec} target=\"#select-set-example2\" />;\n"}},{inline:!0,dependencies:{"@umijs/babel-preset-umi":"3.1.3",umi:"3.1.3"},files:{"src/AsyncNebulaExample.tsx":{path:"@/AsyncNebulaExample.tsx",content:"import { dynamic } from 'umi'\nexport default dynamic({\n  loader: async function() {\n    const { default: NebulaExample } = await import(\n      /* webpackChunkName: \"nebula_example\" */ './NebulaExample'\n    )\n    return NebulaExample\n  },\n})\n"}}}),i.a.createElement(m,null)),i.a.createElement("div",{className:"markdown"},i.a.createElement("h2",{id:"3-select-filter"},i.a.createElement("a",{"aria-hidden":"true",href:"#3-select-filter"},i.a.createElement("span",{className:"icon icon-link"})),"3. Select-Filter"),i.a.createElement("p",null,"A example of Select \u2192 Filter coordinations in two scatterplots, where the selection of the first scatterplot will be filtered in the second scatterplot."),i.a.createElement("pre",null,i.a.createElement("code",null,'"Select items in scatterplot1,',i.a.createElement("br",null),' then filter items in scatterplot2"',i.a.createElement("br",null))),i.a.createElement("div",{id:"select-filter-example1"})),i.a.createElement(l.a,Object(a["a"])({source:{tsx:"import React from 'react'\nimport NebulaExample from '@/AsyncNebulaExample.tsx'\nconst spec = {\n  coordinations: [\n    'select items in select-filter-example1-chart1, then filter items in select-filter-example1-chart2',\n  ],\n  visualizations: [\n    {\n      id: 'select-filter-example1-chart1',\n      visualization: 'scatterplot',\n      container: '1 1 1 1',\n      props: {\n        data: 'cars',\n        x: 'economy (mpg)',\n        y: 'cylinders',\n      },\n    },\n    {\n      id: 'select-filter-example1-chart2',\n      visualization: 'scatterplot',\n      container: '1 1 2 2',\n      props: {\n        data: 'cars',\n        x: 'economy (mpg)',\n        y: 'cylinders',\n      },\n    },\n  ],\n  layout: {\n    width: '700px',\n    height: '350px',\n    rows: ['1fr'],\n    columns: ['1fr', '1fr'],\n  },\n  data: [\n    {\n      name: 'cars',\n      path: '/data/cars.csv',\n      format: 'csv',\n    },\n  ],\n}\n\nexport default () => (\n  <NebulaExample spec={spec} target=\"#select-filter-example1\" />\n)",jsx:"import React from 'react';\nimport NebulaExample from '@/AsyncNebulaExample.tsx';\n\nconst spec = {\n  coordinations: [\n    'select items in select-filter-example1-chart1, then filter items in select-filter-example1-chart2',\n  ],\n  visualizations: [\n    {\n      id: 'select-filter-example1-chart1',\n      visualization: 'scatterplot',\n      container: '1 1 1 1',\n      props: {\n        data: 'cars',\n        x: 'economy (mpg)',\n        y: 'cylinders',\n      },\n    },\n    {\n      id: 'select-filter-example1-chart2',\n      visualization: 'scatterplot',\n      container: '1 1 2 2',\n      props: {\n        data: 'cars',\n        x: 'economy (mpg)',\n        y: 'cylinders',\n      },\n    },\n  ],\n  layout: {\n    width: '700px',\n    height: '350px',\n    rows: ['1fr'],\n    columns: ['1fr', '1fr'],\n  },\n  data: [\n    {\n      name: 'cars',\n      path: '/data/cars.csv',\n      format: 'csv',\n    },\n  ],\n};\nexport default () => <NebulaExample spec={spec} target=\"#select-filter-example1\" />;\n"}},{inline:!0,dependencies:{"@umijs/babel-preset-umi":"3.1.3",umi:"3.1.3"},files:{"src/AsyncNebulaExample.tsx":{path:"@/AsyncNebulaExample.tsx",content:"import { dynamic } from 'umi'\nexport default dynamic({\n  loader: async function() {\n    const { default: NebulaExample } = await import(\n      /* webpackChunkName: \"nebula_example\" */ './NebulaExample'\n    )\n    return NebulaExample\n  },\n})\n"}}}),i.a.createElement(p,null)),i.a.createElement("div",{className:"markdown"},i.a.createElement("h2",{id:"4-select-navigate"},i.a.createElement("a",{"aria-hidden":"true",href:"#4-select-navigate"},i.a.createElement("span",{className:"icon icon-link"})),"4. Select-Navigate"),i.a.createElement("h3",{id:"example-1"},i.a.createElement("a",{"aria-hidden":"true",href:"#example-1"},i.a.createElement("span",{className:"icon icon-link"})),"Example 1"),i.a.createElement("p",null,"A example of Select \u2192 Navigate coordinations in two scatterplots, where the selection of the first scatterplot will cause the navigation to the area in the second scatterplot."),i.a.createElement("pre",null,i.a.createElement("code",null,'"Select intervals in scatterplot1,',i.a.createElement("br",null),' then navigate scales in scatterplot2"',i.a.createElement("br",null))),i.a.createElement("div",{id:"select-navigate-example1"})),i.a.createElement(l.a,Object(a["a"])({source:{tsx:"import React from 'react'\nimport NebulaExample from '@/AsyncNebulaExample.tsx'\nconst spec = {\n  coordinations: [\n    'select items in select-navigate-example1-chart1, then navigate ranges in select-navigate-example1-chart2',\n  ],\n  visualizations: [\n    {\n      id: 'select-navigate-example1-chart1',\n      visualization: 'scatterplot',\n      container: '1 1 1 1',\n      props: {\n        data: 'cars',\n        x: 'economy (mpg)',\n        y: 'cylinders',\n      },\n    },\n    {\n      id: 'select-navigate-example1-chart2',\n      visualization: 'scatterplot',\n      container: '1 1 2 2',\n      props: {\n        data: 'cars',\n        x: 'economy (mpg)',\n        y: 'cylinders',\n      },\n    },\n  ],\n  layout: {\n    width: '700px',\n    height: '350px',\n    rows: ['1fr'],\n    columns: ['1fr', '1fr'],\n  },\n  data: [\n    {\n      name: 'cars',\n      path: '/data/cars.csv',\n      format: 'csv',\n    },\n  ],\n}\n\nexport default () => (\n  <NebulaExample spec={spec} target=\"#select-navigate-example1\" />\n)",jsx:"import React from 'react';\nimport NebulaExample from '@/AsyncNebulaExample.tsx';\n\nconst spec = {\n  coordinations: [\n    'select items in select-navigate-example1-chart1, then navigate ranges in select-navigate-example1-chart2',\n  ],\n  visualizations: [\n    {\n      id: 'select-navigate-example1-chart1',\n      visualization: 'scatterplot',\n      container: '1 1 1 1',\n      props: {\n        data: 'cars',\n        x: 'economy (mpg)',\n        y: 'cylinders',\n      },\n    },\n    {\n      id: 'select-navigate-example1-chart2',\n      visualization: 'scatterplot',\n      container: '1 1 2 2',\n      props: {\n        data: 'cars',\n        x: 'economy (mpg)',\n        y: 'cylinders',\n      },\n    },\n  ],\n  layout: {\n    width: '700px',\n    height: '350px',\n    rows: ['1fr'],\n    columns: ['1fr', '1fr'],\n  },\n  data: [\n    {\n      name: 'cars',\n      path: '/data/cars.csv',\n      format: 'csv',\n    },\n  ],\n};\nexport default () => <NebulaExample spec={spec} target=\"#select-navigate-example1\" />;\n"}},{inline:!0,dependencies:{"@umijs/babel-preset-umi":"3.1.3",umi:"3.1.3"},files:{"src/AsyncNebulaExample.tsx":{path:"@/AsyncNebulaExample.tsx",content:"import { dynamic } from 'umi'\nexport default dynamic({\n  loader: async function() {\n    const { default: NebulaExample } = await import(\n      /* webpackChunkName: \"nebula_example\" */ './NebulaExample'\n    )\n    return NebulaExample\n  },\n})\n"}}}),i.a.createElement(d,null)),i.a.createElement("div",{className:"markdown"},i.a.createElement("h3",{id:"example-2"},i.a.createElement("a",{"aria-hidden":"true",href:"#example-2"},i.a.createElement("span",{className:"icon icon-link"})),"Example 2"),i.a.createElement("p",null,"An example of Select \u2192 Navigate coordination in a scatterplot and a map, where the map will be navigated to the area according to the selected points in the scatterplot."),i.a.createElement("pre",null,i.a.createElement("code",null,'"Select items in scatterplot,',i.a.createElement("br",null)," then item2scales,",i.a.createElement("br",null),' then navigate scales in map."',i.a.createElement("br",null))),i.a.createElement("div",{id:"select-navigate-example2"})),i.a.createElement(l.a,Object(a["a"])({source:{tsx:"import React from 'react'\nimport NebulaExample from '@/AsyncNebulaExample.tsx'\nconst spec = {\n  coordinations: [\n    'select items in select-navigate-example2-chart1, then navigate ranges in select-navigate-example2-chart2',\n  ],\n  visualizations: [\n    {\n      id: 'select-navigate-example2-chart1',\n      visualization: 'scatterplot',\n      container: '1 1 1 1',\n      props: {\n        data: 'houses',\n        x: 'lng1',\n        y: 'lat1',\n      },\n    },\n    {\n      id: 'select-navigate-example2-chart2',\n      visualization: 'map',\n      container: '1 1 2 2',\n      props: {\n        data: 'houses',\n        x: 'lng1',\n        y: 'lat1',\n        brushType: 'xy',\n        bottomEdge: 'bottom',\n        circleColor: '#80B1D3',\n        mapStyle: {\n          mapLayerStyle:\n            '//map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetGray/MapServer/tile/{z}/{y}/{x}',\n          annotionLayerStyle:\n            'http://t{s}.tianditu.com/DataServer?T=eva_w&X={x}&Y={y}&L={z}&tk={key}',\n          minZoom: 3,\n          maxZoom: 20,\n          centerPoint: [30.2708376789, 120.130177269],\n          zoom: 10,\n          zoomControl: false,\n          attributionControl: false,\n        },\n      },\n    },\n  ],\n  layout: {\n    width: '700px',\n    height: '350px',\n    rows: ['1fr'],\n    columns: ['1fr', '1fr'],\n  },\n  data: [\n    {\n      name: 'houses',\n      path: '/data/houses.json',\n    },\n  ],\n}\n\nexport default () => (\n  <NebulaExample spec={spec} target=\"#select-navigate-example2\" />\n)",jsx:"import React from 'react';\nimport NebulaExample from '@/AsyncNebulaExample.tsx';\n\nconst spec = {\n  coordinations: [\n    'select items in select-navigate-example2-chart1, then navigate ranges in select-navigate-example2-chart2',\n  ],\n  visualizations: [\n    {\n      id: 'select-navigate-example2-chart1',\n      visualization: 'scatterplot',\n      container: '1 1 1 1',\n      props: {\n        data: 'houses',\n        x: 'lng1',\n        y: 'lat1',\n      },\n    },\n    {\n      id: 'select-navigate-example2-chart2',\n      visualization: 'map',\n      container: '1 1 2 2',\n      props: {\n        data: 'houses',\n        x: 'lng1',\n        y: 'lat1',\n        brushType: 'xy',\n        bottomEdge: 'bottom',\n        circleColor: '#80B1D3',\n        mapStyle: {\n          mapLayerStyle:\n            '//map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetGray/MapServer/tile/{z}/{y}/{x}',\n          annotionLayerStyle:\n            'http://t{s}.tianditu.com/DataServer?T=eva_w&X={x}&Y={y}&L={z}&tk={key}',\n          minZoom: 3,\n          maxZoom: 20,\n          centerPoint: [30.2708376789, 120.130177269],\n          zoom: 10,\n          zoomControl: false,\n          attributionControl: false,\n        },\n      },\n    },\n  ],\n  layout: {\n    width: '700px',\n    height: '350px',\n    rows: ['1fr'],\n    columns: ['1fr', '1fr'],\n  },\n  data: [\n    {\n      name: 'houses',\n      path: '/data/houses.json',\n    },\n  ],\n};\nexport default () => <NebulaExample spec={spec} target=\"#select-navigate-example2\" />;\n"}},{inline:!0,dependencies:{"@umijs/babel-preset-umi":"3.1.3",umi:"3.1.3"},files:{"src/AsyncNebulaExample.tsx":{path:"@/AsyncNebulaExample.tsx",content:"import { dynamic } from 'umi'\nexport default dynamic({\n  loader: async function() {\n    const { default: NebulaExample } = await import(\n      /* webpackChunkName: \"nebula_example\" */ './NebulaExample'\n    )\n    return NebulaExample\n  },\n})\n"}}}),i.a.createElement(u,null)),i.a.createElement("div",{className:"markdown"},i.a.createElement("h2",{id:"5-navigate-navigate"},i.a.createElement("a",{"aria-hidden":"true",href:"#5-navigate-navigate"},i.a.createElement("span",{className:"icon icon-link"})),"5. Navigate-Navigate"),i.a.createElement("p",null,"An example of Navigate \u2192 Navigate coordination in a scatterplot and a map, where panning and zooming in the map will cause the corresponding panning and zooming in the scatterplot."),i.a.createElement("pre",null,i.a.createElement("code",null,'"Navigate scales in map,',i.a.createElement("br",null),' then navigate scales in scatterplot."',i.a.createElement("br",null))),i.a.createElement("div",{id:"navigate-navigate-example1"})),i.a.createElement(l.a,Object(a["a"])({source:{tsx:"import React from 'react'\nimport NebulaExample from '@/AsyncNebulaExample.tsx'\nconst spec = {\n  coordinations: [\n    'navigate ranges in navigate-navigate-example1-chart1, then navigate ranges in navigate-navigate-example1-chart2',\n  ],\n  visualizations: [\n    {\n      id: 'navigate-navigate-example1-chart1',\n      visualization: 'map',\n      container: '1 1 1 1',\n      props: {\n        data: 'houses',\n        x: 'lng1',\n        y: 'lat1',\n        brushType: 'xy',\n        bottomEdge: 'bottom',\n        circleColor: '#80B1D3',\n        mapStyle: {\n          mapLayerStyle:\n            '//map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetGray/MapServer/tile/{z}/{y}/{x}',\n          annotionLayerStyle:\n            'http://t{s}.tianditu.com/DataServer?T=eva_w&X={x}&Y={y}&L={z}&tk={key}',\n          minZoom: 3,\n          maxZoom: 20,\n          centerPoint: [30.2708376789, 120.130177269],\n          zoom: 10,\n          zoomControl: false,\n          attributionControl: false,\n        },\n      },\n    },\n    {\n      id: 'navigate-navigate-example1-chart2',\n      visualization: 'scatterplot',\n      container: '1 1 3 3',\n      props: {\n        data: 'houses',\n        x: 'lng1',\n        y: 'lat1',\n      },\n    },\n  ],\n  layout: {\n    width: '750px',\n    height: '350px',\n    rows: ['1fr'],\n    columns: ['1fr', '50px', '1fr'],\n  },\n  data: [\n    {\n      name: 'houses',\n      path: '/data/houses.json',\n    },\n  ],\n}\n\nexport default () => (\n  <NebulaExample spec={spec} target=\"#navigate-navigate-example1\" />\n)",jsx:"import React from 'react';\nimport NebulaExample from '@/AsyncNebulaExample.tsx';\n\nconst spec = {\n  coordinations: [\n    'navigate ranges in navigate-navigate-example1-chart1, then navigate ranges in navigate-navigate-example1-chart2',\n  ],\n  visualizations: [\n    {\n      id: 'navigate-navigate-example1-chart1',\n      visualization: 'map',\n      container: '1 1 1 1',\n      props: {\n        data: 'houses',\n        x: 'lng1',\n        y: 'lat1',\n        brushType: 'xy',\n        bottomEdge: 'bottom',\n        circleColor: '#80B1D3',\n        mapStyle: {\n          mapLayerStyle:\n            '//map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetGray/MapServer/tile/{z}/{y}/{x}',\n          annotionLayerStyle:\n            'http://t{s}.tianditu.com/DataServer?T=eva_w&X={x}&Y={y}&L={z}&tk={key}',\n          minZoom: 3,\n          maxZoom: 20,\n          centerPoint: [30.2708376789, 120.130177269],\n          zoom: 10,\n          zoomControl: false,\n          attributionControl: false,\n        },\n      },\n    },\n    {\n      id: 'navigate-navigate-example1-chart2',\n      visualization: 'scatterplot',\n      container: '1 1 3 3',\n      props: {\n        data: 'houses',\n        x: 'lng1',\n        y: 'lat1',\n      },\n    },\n  ],\n  layout: {\n    width: '750px',\n    height: '350px',\n    rows: ['1fr'],\n    columns: ['1fr', '50px', '1fr'],\n  },\n  data: [\n    {\n      name: 'houses',\n      path: '/data/houses.json',\n    },\n  ],\n};\nexport default () => <NebulaExample spec={spec} target=\"#navigate-navigate-example1\" />;\n"}},{inline:!0,dependencies:{"@umijs/babel-preset-umi":"3.1.3",umi:"3.1.3"},files:{"src/AsyncNebulaExample.tsx":{path:"@/AsyncNebulaExample.tsx",content:"import { dynamic } from 'umi'\nexport default dynamic({\n  loader: async function() {\n    const { default: NebulaExample } = await import(\n      /* webpackChunkName: \"nebula_example\" */ './NebulaExample'\n    )\n    return NebulaExample\n  },\n})\n"}}}),i.a.createElement(h,null)),i.a.createElement("div",{className:"markdown"},i.a.createElement("h2",{id:"6-navigate-select"},i.a.createElement("a",{"aria-hidden":"true",href:"#6-navigate-select"},i.a.createElement("span",{className:"icon icon-link"})),"6. Navigate-Select"),i.a.createElement("p",null,"An example of Navigate \u2192 Select coordination in a scatterplot and a map, where the points in the scatterplot will be highlighted if they fall in the area navigated in map."),i.a.createElement("pre",null,i.a.createElement("code",null,'"Navigate scales in map,',i.a.createElement("br",null)," then scales2items,",i.a.createElement("br",null),' then select items in scatterplot."',i.a.createElement("br",null))),i.a.createElement("div",{id:"navigate-select-example1"})),i.a.createElement(l.a,Object(a["a"])({source:{tsx:"import React from 'react'\nimport NebulaExample from '@/AsyncNebulaExample.tsx'\nconst spec = {\n  coordinations: [\n    {\n      'data-visualization': [\n        { name: '$d1', bind: ['navigate-select-example1-chart1.visibleRange'] },\n        { name: '$d2', bind: ['navigate-select-example1-chart2.data'] },\n        {\n          name: '$d3',\n          bind: ['navigate-select-example1-chart2.selection.unidirectional'],\n        },\n      ],\n      transformation: {\n        name: 'ranges-to-items',\n        input: ['$d1', '$d2'],\n        output: ['$d3'],\n      },\n    },\n  ],\n  visualizations: [\n    {\n      id: 'navigate-select-example1-chart1',\n      visualization: 'map',\n      container: '1 1 1 1',\n      props: {\n        data: 'houses',\n        x: 'lng1',\n        y: 'lat1',\n        brushType: 'xy',\n        bottomEdge: 'bottom',\n        circleColor: '#80B1D3',\n        mapStyle: {\n          mapLayerStyle:\n            '//map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetGray/MapServer/tile/{z}/{y}/{x}',\n          annotionLayerStyle:\n            'http://t{s}.tianditu.com/DataServer?T=eva_w&X={x}&Y={y}&L={z}&tk={key}',\n          minZoom: 3,\n          maxZoom: 20,\n          centerPoint: [30.2708376789, 120.130177269],\n          zoom: 10,\n          zoomControl: false,\n          attributionControl: false,\n        },\n      },\n    },\n    {\n      id: 'navigate-select-example1-chart2',\n      visualization: 'scatterplot',\n      container: '1 1 3 3',\n      props: {\n        data: 'houses',\n        x: 'lng1',\n        y: 'lat1',\n      },\n    },\n  ],\n  layout: {\n    width: '750px',\n    height: '350px',\n    rows: ['1fr'],\n    columns: ['1fr', '50px', '1fr'],\n  },\n  data: [\n    {\n      name: 'houses',\n      path: '/data/houses.json',\n    },\n  ],\n}\n\nexport default () => (\n  <NebulaExample spec={spec} target=\"#navigate-select-example1\" />\n)",jsx:"import React from 'react';\nimport NebulaExample from '@/AsyncNebulaExample.tsx';\n\nconst spec = {\n  coordinations: [\n    {\n      'data-visualization': [\n        {\n          name: '$d1',\n          bind: ['navigate-select-example1-chart1.visibleRange'],\n        },\n        {\n          name: '$d2',\n          bind: ['navigate-select-example1-chart2.data'],\n        },\n        {\n          name: '$d3',\n          bind: ['navigate-select-example1-chart2.selection.unidirectional'],\n        },\n      ],\n      transformation: {\n        name: 'ranges-to-items',\n        input: ['$d1', '$d2'],\n        output: ['$d3'],\n      },\n    },\n  ],\n  visualizations: [\n    {\n      id: 'navigate-select-example1-chart1',\n      visualization: 'map',\n      container: '1 1 1 1',\n      props: {\n        data: 'houses',\n        x: 'lng1',\n        y: 'lat1',\n        brushType: 'xy',\n        bottomEdge: 'bottom',\n        circleColor: '#80B1D3',\n        mapStyle: {\n          mapLayerStyle:\n            '//map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetGray/MapServer/tile/{z}/{y}/{x}',\n          annotionLayerStyle:\n            'http://t{s}.tianditu.com/DataServer?T=eva_w&X={x}&Y={y}&L={z}&tk={key}',\n          minZoom: 3,\n          maxZoom: 20,\n          centerPoint: [30.2708376789, 120.130177269],\n          zoom: 10,\n          zoomControl: false,\n          attributionControl: false,\n        },\n      },\n    },\n    {\n      id: 'navigate-select-example1-chart2',\n      visualization: 'scatterplot',\n      container: '1 1 3 3',\n      props: {\n        data: 'houses',\n        x: 'lng1',\n        y: 'lat1',\n      },\n    },\n  ],\n  layout: {\n    width: '750px',\n    height: '350px',\n    rows: ['1fr'],\n    columns: ['1fr', '50px', '1fr'],\n  },\n  data: [\n    {\n      name: 'houses',\n      path: '/data/houses.json',\n    },\n  ],\n};\nexport default () => <NebulaExample spec={spec} target=\"#navigate-select-example1\" />;\n"}},{inline:!0,dependencies:{"@umijs/babel-preset-umi":"3.1.3",umi:"3.1.3"},files:{"src/AsyncNebulaExample.tsx":{path:"@/AsyncNebulaExample.tsx",content:"import { dynamic } from 'umi'\nexport default dynamic({\n  loader: async function() {\n    const { default: NebulaExample } = await import(\n      /* webpackChunkName: \"nebula_example\" */ './NebulaExample'\n    )\n    return NebulaExample\n  },\n})\n"}}}),i.a.createElement(x,null)),i.a.createElement("div",{className:"markdown"},i.a.createElement("h2",{id:"7-encode-encode"},i.a.createElement("a",{"aria-hidden":"true",href:"#7-encode-encode"},i.a.createElement("span",{className:"icon icon-link"})),"7. Encode-Encode"),i.a.createElement("p",null,"An example of Encode \u2192 Encode coordination, where modifying the value of the slider will change the point size in both scatterplots."),i.a.createElement("pre",null,i.a.createElement("code",null,'"Encode size in scatterplot1,',i.a.createElement("br",null),' then encode size in scatterplot2."',i.a.createElement("br",null))),i.a.createElement("div",{id:"encode-encode-example1"})),i.a.createElement(l.a,Object(a["a"])({source:{tsx:"import React from 'react'\nimport NebulaExample from '@/AsyncNebulaExample.tsx'\nconst spec = {\n  coordinations: [\n    'set value in encode-encode-example1-slider, then encode size in encode-encode-example1-chart1 and encode-encode-example1-chart2',\n  ],\n  visualizations: [\n    {\n      id: 'encode-encode-example1-slider',\n      visualization: 'slider',\n      container: '1 1 1 1',\n      props: {\n        min: 1,\n        max: 10,\n        value: 4,\n      },\n    },\n    {\n      id: 'encode-encode-example1-chart1',\n      visualization: 'scatterplot',\n      container: '1 1 2 2',\n      props: {\n        data: 'cars',\n      },\n    },\n    {\n      id: 'encode-encode-example1-chart2',\n      visualization: 'scatterplot',\n      container: '1 1 3 3',\n      props: {\n        data: 'cars',\n        x: 'power (hp)',\n        y: '0-60 mph (s)',\n      },\n    },\n  ],\n  layout: {\n    width: '750px',\n    height: '300px',\n    rows: ['1fr'],\n    columns: ['150px', '300px', '300px'],\n  },\n  data: [\n    {\n      name: 'cars',\n      path: 'https://nebula-vis.github.io/data/cars.csv',\n      format: 'csv',\n    },\n  ],\n}\n\nexport default () => (\n  <NebulaExample spec={spec} target=\"#encode-encode-example1\" />\n)",jsx:"import React from 'react';\nimport NebulaExample from '@/AsyncNebulaExample.tsx';\n\nconst spec = {\n  coordinations: [\n    'set value in encode-encode-example1-slider, then encode size in encode-encode-example1-chart1 and encode-encode-example1-chart2',\n  ],\n  visualizations: [\n    {\n      id: 'encode-encode-example1-slider',\n      visualization: 'slider',\n      container: '1 1 1 1',\n      props: {\n        min: 1,\n        max: 10,\n        value: 4,\n      },\n    },\n    {\n      id: 'encode-encode-example1-chart1',\n      visualization: 'scatterplot',\n      container: '1 1 2 2',\n      props: {\n        data: 'cars',\n      },\n    },\n    {\n      id: 'encode-encode-example1-chart2',\n      visualization: 'scatterplot',\n      container: '1 1 3 3',\n      props: {\n        data: 'cars',\n        x: 'power (hp)',\n        y: '0-60 mph (s)',\n      },\n    },\n  ],\n  layout: {\n    width: '750px',\n    height: '300px',\n    rows: ['1fr'],\n    columns: ['150px', '300px', '300px'],\n  },\n  data: [\n    {\n      name: 'cars',\n      path: 'https://nebula-vis.github.io/data/cars.csv',\n      format: 'csv',\n    },\n  ],\n};\nexport default () => <NebulaExample spec={spec} target=\"#encode-encode-example1\" />;\n"}},{inline:!0,dependencies:{"@umijs/babel-preset-umi":"3.1.3",umi:"3.1.3"},files:{"src/AsyncNebulaExample.tsx":{path:"@/AsyncNebulaExample.tsx",content:"import { dynamic } from 'umi'\nexport default dynamic({\n  loader: async function() {\n    const { default: NebulaExample } = await import(\n      /* webpackChunkName: \"nebula_example\" */ './NebulaExample'\n    )\n    return NebulaExample\n  },\n})\n"}}}),i.a.createElement(g,null)),i.a.createElement("div",{className:"markdown"},i.a.createElement("h2",{id:"8-reconfigure-reconfigure"},i.a.createElement("a",{"aria-hidden":"true",href:"#8-reconfigure-reconfigure"},i.a.createElement("span",{className:"icon icon-link"})),"8. Reconfigure-Reconfigure"),i.a.createElement("p",null,"An example of Reconfigure \u2192 Reconfigure coordination, where modifying the attribute order of the dataset in LineUp by dragging and dropping will also modify the stacking order of attributes in the stacked bar chart."),i.a.createElement("pre",null,i.a.createElement("code",null,'"Reconfigure order in lineup,',i.a.createElement("br",null),' then reconfigure order in stacked-barchart."',i.a.createElement("br",null))),i.a.createElement("div",{id:"reconfigure-reconfigure-example1"})),i.a.createElement(l.a,Object(a["a"])({source:{tsx:"import React from 'react'\nimport NebulaExample from '@/AsyncNebulaExample.tsx'\nconst spec = {\n  coordinations: [\n    'reconfigure order in reconfigure-reconfigure-example1-chart1, then reconfigure order in reconfigure-reconfigure-example1-chart2',\n  ],\n  visualizations: [\n    {\n      id: 'reconfigure-reconfigure-example1-chart1',\n      container: '1 1 1 1',\n      visualization: 'lineup',\n      props: {\n        data: 'cars',\n        order: ['economy (mpg)', 'displacement (cc)', 'power (hp)'],\n        color: ['#66c2a5', '#fc8d62', '#8da0cb'],\n      },\n    },\n    {\n      id: 'reconfigure-reconfigure-example1-chart2',\n      container: '1 1 3 3',\n      visualization: 'barchart',\n      props: {\n        data: 'cars',\n        x: 'year',\n        y: ['economy (mpg)', 'displacement (cc)', 'power (hp)'],\n        color: ['#66c2a5', '#fc8d62', '#8da0cb'],\n        aggregate: ['average', 'average', 'average', 'average'],\n        count: 6,\n        stacked: true,\n      },\n    },\n  ],\n  layout: {\n    width: '800px',\n    height: '350px',\n    rows: ['1fr'],\n    columns: ['1fr', '50px', '350px'],\n  },\n  data: [\n    {\n      name: 'cars',\n      path: '/data/cars.csv',\n      format: 'csv',\n    },\n  ],\n}\n\nexport default () => (\n  <NebulaExample spec={spec} target=\"#reconfigure-reconfigure-example1\" />\n)",jsx:"import React from 'react';\nimport NebulaExample from '@/AsyncNebulaExample.tsx';\n\nconst spec = {\n  coordinations: [\n    'reconfigure order in reconfigure-reconfigure-example1-chart1, then reconfigure order in reconfigure-reconfigure-example1-chart2',\n  ],\n  visualizations: [\n    {\n      id: 'reconfigure-reconfigure-example1-chart1',\n      container: '1 1 1 1',\n      visualization: 'lineup',\n      props: {\n        data: 'cars',\n        order: ['economy (mpg)', 'displacement (cc)', 'power (hp)'],\n        color: ['#66c2a5', '#fc8d62', '#8da0cb'],\n      },\n    },\n    {\n      id: 'reconfigure-reconfigure-example1-chart2',\n      container: '1 1 3 3',\n      visualization: 'barchart',\n      props: {\n        data: 'cars',\n        x: 'year',\n        y: ['economy (mpg)', 'displacement (cc)', 'power (hp)'],\n        color: ['#66c2a5', '#fc8d62', '#8da0cb'],\n        aggregate: ['average', 'average', 'average', 'average'],\n        count: 6,\n        stacked: true,\n      },\n    },\n  ],\n  layout: {\n    width: '800px',\n    height: '350px',\n    rows: ['1fr'],\n    columns: ['1fr', '50px', '350px'],\n  },\n  data: [\n    {\n      name: 'cars',\n      path: '/data/cars.csv',\n      format: 'csv',\n    },\n  ],\n};\nexport default () => <NebulaExample spec={spec} target=\"#reconfigure-reconfigure-example1\" />;\n"}},{inline:!0,dependencies:{"@umijs/babel-preset-umi":"3.1.3",umi:"3.1.3"},files:{"src/AsyncNebulaExample.tsx":{path:"@/AsyncNebulaExample.tsx",content:"import { dynamic } from 'umi'\nexport default dynamic({\n  loader: async function() {\n    const { default: NebulaExample } = await import(\n      /* webpackChunkName: \"nebula_example\" */ './NebulaExample'\n    )\n    return NebulaExample\n  },\n})\n"}}}),i.a.createElement(f,null)),i.a.createElement("div",{className:"markdown"},i.a.createElement("h2",{id:"9-srvis"},i.a.createElement("a",{"aria-hidden":"true",href:"#9-srvis"},i.a.createElement("span",{className:"icon icon-link"})),"9. SRVis"),i.a.createElement("p",null,"The reproduction of the core module of ",i.a.createElement("a",{href:"https://ieeexplore.ieee.org/document/8456575",target:"_blank"},"SRVis",i.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg","aria-hidden":!0,x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15",className:"__dumi-default-external-link-icon"},i.a.createElement("path",{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}),i.a.createElement("polygon",{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"})))," with six visualizations, i.e., a map, four histograms, and a ",i.a.createElement("a",{href:"https://github.com/lineupjs",target:"_blank"},"LineUp",i.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg","aria-hidden":!0,x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15",className:"__dumi-default-external-link-icon"},i.a.createElement("path",{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}),i.a.createElement("polygon",{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}))),". It consists of five coordinations. "),i.a.createElement("p",null,"Specifically, selecting data of interest in the map will modify the dataset of the four histograms to present the statistical distributions of the selection along the longitude and latitude. Besides, the selection is also highlighted in the LineUp to show the details of dimensions. Panning and zooming in map will modify the scales of x (longitude) in the top and bottom histograms and the scales of y (latitude) in the left and right histograms with a data transformation to transform 2D scales to 1D. When panning and zooming, the visible data in the map is extracted by a data transformation and fed into the LineUp to keep their datasets consistent. Rearranging the order of dimensions in the LineUp will update that in the stacked histograms to keep their order consistent."),i.a.createElement("pre",null,i.a.createElement("code",null,'"Select items in map, then set data in histogram1, histogram2, stacked-barchart1, stacked-barchart2, and highlight items in lineup."',i.a.createElement("br",null),'"Navigate scales in map, then xyscales2x, then navigate xscales in histogram1 and stacked-barchart1."',i.a.createElement("br",null),'"Navigate scales in map, then xyscales2y, then navigate yscales in histogram2 and stacked-barchart2."',i.a.createElement("br",null),'"Navigate scales in map, then scales2items, then set data in lineup."',i.a.createElement("br",null),'"Reconfigure order in lineup, then reconfigure order in stacked-barchart1, stacked-barchart2."',i.a.createElement("br",null))),i.a.createElement("div",{id:"srvis"})),i.a.createElement(l.a,Object(a["a"])({source:{tsx:"import React from 'react'\nimport NebulaExample from '@/AsyncNebulaExample.tsx'\n\nconst spec = {\n  coordinations: [\n    'select items in map, then set data in histo-top, histo-left, stackedbar-right, and stackedbar-bottom, select items in lineup',\n    'navigate ranges in map, then navigate ranges in histo-top, histo-left, stackedbar-right, stackedbar-bottom',\n    'navigate items in map, then set data in lineup',\n    'reconfigure order in lineup, then encode y in stackedbar-right, stackedbar-bottom',\n  ],\n  visualizations: [\n    {\n      id: 'map',\n      container: '2 2 2 2',\n      visualization: 'map',\n      props: {\n        data: 'houses',\n        x: 'lng1',\n        y: 'lat1',\n        brushType: 'xy',\n        bottomEdge: 'bottom',\n        circleColor: '#80B1D3',\n        mapStyle: {\n          mapLayerStyle:\n            '//map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetGray/MapServer/tile/{z}/{y}/{x}',\n          annotionLayerStyle:\n            'http://t{s}.tianditu.com/DataServer?T=eva_w&X={x}&Y={y}&L={z}&tk={key}',\n          minZoom: 3,\n          maxZoom: 20,\n          centerPoint: [30.2708376789, 120.130177269],\n          zoom: 10,\n          zoomControl: false,\n          attributionControl: false,\n        },\n      },\n    },\n    {\n      id: 'histo-top',\n      container: '1 1 2 2',\n      visualization: 'barchart',\n      props: {\n        data: 'houses',\n        x: 'lng1',\n        aggregate: 'max',\n        y: 'Floor Size',\n        count: 100,\n        bottomEdge: 'bottom',\n        margin: {\n          right: 0,\n          left: 0,\n          top: 0,\n          bottom: 5,\n        },\n        isDisplay: false,\n      },\n    },\n    {\n      id: 'histo-left',\n      container: '2 2 1 1',\n      visualization: 'barchart',\n      props: {\n        data: 'houses',\n        x: 'lat1',\n        aggregate: 'count',\n        count: 100,\n        bottomEdge: 'right',\n        margin: {\n          right: 0,\n          left: 0,\n          top: 0,\n          bottom: 5,\n        },\n        isDisplay: false,\n      },\n    },\n    {\n      id: 'stackedbar-right',\n      container: '2 2 3 3',\n      visualization: 'barchart',\n      props: {\n        data: 'houses',\n        x: 'lat1',\n        y: ['Living Rooms', 'Bedrooms', 'Floor Size'],\n        aggregate: ['sum', 'sum', 'max'],\n        scaleY: [1, 1, 0.01],\n        count: 100,\n        color: ['#fc8d62', '#8da0cb', '#a6d854'],\n        bottomEdge: 'left-mirror',\n        margin: {\n          right: 0,\n          left: 0,\n          top: 0,\n          bottom: 5,\n        },\n        stacked: true,\n        isDisplay: false,\n      },\n    },\n    {\n      id: 'stackedbar-bottom',\n      container: '3 3 2 2',\n      visualization: 'barchart',\n      props: {\n        data: 'houses',\n        x: 'lng1',\n        y: ['Living Rooms', 'Bedrooms', 'Floor Size'],\n        aggregate: ['sum', 'sum', 'max'],\n        scaleY: [1, 1, 0.01],\n        count: 100,\n        color: ['#fc8d62', '#8da0cb', '#a6d854'],\n        bottomEdge: 'top-mirror',\n        margin: {\n          right: 0,\n          left: 0,\n          top: 0,\n          bottom: 5,\n        },\n        stacked: true,\n        isDisplay: false,\n      },\n    },\n    {\n      id: 'lineup',\n      container: '1 3 4 4',\n      visualization: 'lineup',\n      props: {\n        data: 'houses',\n        order: ['Living Rooms', 'Bedrooms', 'Floor Size'],\n        color: ['#fc8d62', '#8da0cb', '#a6d854'],\n      },\n    },\n  ],\n  layout: {\n    width: '1250px',\n    height: '800px',\n    rows: ['100px', '800px', '100px'],\n    columns: ['100px', '600px', '100px', '1fr'],\n  },\n  data: [\n    {\n      name: 'houses',\n      path: 'https://nebula-vis.github.io/data/houses.json',\n    },\n  ],\n}\n\nexport default () => (\n  <NebulaExample spec={spec} target=\"#srvis\" position=\"vertical\" />\n)",jsx:"import React from 'react';\nimport NebulaExample from '@/AsyncNebulaExample.tsx';\n\nconst spec = {\n  coordinations: [\n    'select items in map, then set data in histo-top, histo-left, stackedbar-right, and stackedbar-bottom, select items in lineup',\n    'navigate ranges in map, then navigate ranges in histo-top, histo-left, stackedbar-right, stackedbar-bottom',\n    'navigate items in map, then set data in lineup',\n    'reconfigure order in lineup, then encode y in stackedbar-right, stackedbar-bottom',\n  ],\n  visualizations: [\n    {\n      id: 'map',\n      container: '2 2 2 2',\n      visualization: 'map',\n      props: {\n        data: 'houses',\n        x: 'lng1',\n        y: 'lat1',\n        brushType: 'xy',\n        bottomEdge: 'bottom',\n        circleColor: '#80B1D3',\n        mapStyle: {\n          mapLayerStyle:\n            '//map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetGray/MapServer/tile/{z}/{y}/{x}',\n          annotionLayerStyle:\n            'http://t{s}.tianditu.com/DataServer?T=eva_w&X={x}&Y={y}&L={z}&tk={key}',\n          minZoom: 3,\n          maxZoom: 20,\n          centerPoint: [30.2708376789, 120.130177269],\n          zoom: 10,\n          zoomControl: false,\n          attributionControl: false,\n        },\n      },\n    },\n    {\n      id: 'histo-top',\n      container: '1 1 2 2',\n      visualization: 'barchart',\n      props: {\n        data: 'houses',\n        x: 'lng1',\n        aggregate: 'max',\n        y: 'Floor Size',\n        count: 100,\n        bottomEdge: 'bottom',\n        margin: {\n          right: 0,\n          left: 0,\n          top: 0,\n          bottom: 5,\n        },\n        isDisplay: false,\n      },\n    },\n    {\n      id: 'histo-left',\n      container: '2 2 1 1',\n      visualization: 'barchart',\n      props: {\n        data: 'houses',\n        x: 'lat1',\n        aggregate: 'count',\n        count: 100,\n        bottomEdge: 'right',\n        margin: {\n          right: 0,\n          left: 0,\n          top: 0,\n          bottom: 5,\n        },\n        isDisplay: false,\n      },\n    },\n    {\n      id: 'stackedbar-right',\n      container: '2 2 3 3',\n      visualization: 'barchart',\n      props: {\n        data: 'houses',\n        x: 'lat1',\n        y: ['Living Rooms', 'Bedrooms', 'Floor Size'],\n        aggregate: ['sum', 'sum', 'max'],\n        scaleY: [1, 1, 0.01],\n        count: 100,\n        color: ['#fc8d62', '#8da0cb', '#a6d854'],\n        bottomEdge: 'left-mirror',\n        margin: {\n          right: 0,\n          left: 0,\n          top: 0,\n          bottom: 5,\n        },\n        stacked: true,\n        isDisplay: false,\n      },\n    },\n    {\n      id: 'stackedbar-bottom',\n      container: '3 3 2 2',\n      visualization: 'barchart',\n      props: {\n        data: 'houses',\n        x: 'lng1',\n        y: ['Living Rooms', 'Bedrooms', 'Floor Size'],\n        aggregate: ['sum', 'sum', 'max'],\n        scaleY: [1, 1, 0.01],\n        count: 100,\n        color: ['#fc8d62', '#8da0cb', '#a6d854'],\n        bottomEdge: 'top-mirror',\n        margin: {\n          right: 0,\n          left: 0,\n          top: 0,\n          bottom: 5,\n        },\n        stacked: true,\n        isDisplay: false,\n      },\n    },\n    {\n      id: 'lineup',\n      container: '1 3 4 4',\n      visualization: 'lineup',\n      props: {\n        data: 'houses',\n        order: ['Living Rooms', 'Bedrooms', 'Floor Size'],\n        color: ['#fc8d62', '#8da0cb', '#a6d854'],\n      },\n    },\n  ],\n  layout: {\n    width: '1250px',\n    height: '800px',\n    rows: ['100px', '800px', '100px'],\n    columns: ['100px', '600px', '100px', '1fr'],\n  },\n  data: [\n    {\n      name: 'houses',\n      path: 'https://nebula-vis.github.io/data/houses.json',\n    },\n  ],\n};\nexport default () => <NebulaExample spec={spec} target=\"#srvis\" position=\"vertical\" />;\n"}},{inline:!0,dependencies:{"@umijs/babel-preset-umi":"3.1.3",umi:"3.1.3"},files:{"src/AsyncNebulaExample.tsx":{path:"@/AsyncNebulaExample.tsx",content:"import { dynamic } from 'umi'\nexport default dynamic({\n  loader: async function() {\n    const { default: NebulaExample } = await import(\n      /* webpackChunkName: \"nebula_example\" */ './NebulaExample'\n    )\n    return NebulaExample\n  },\n})\n"}}}),i.a.createElement(v,null)))}},Dzc9:function(e,n,t){"use strict";t.r(n);var a=t("WmNS"),r=t.n(a),i=t("9og8"),o=t("LtsZ");n["default"]=Object(o["dynamic"])({loader:function(){var e=Object(i["a"])(r.a.mark((function e(){var n,a;return r.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(7),t.e(5)]).then(t.bind(null,"D5Lg"));case 2:return n=e.sent,a=n.default,e.abrupt("return",a);case 5:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()})},LfxP:function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return i}));var a=t("q1tI"),r=t.n(a);class i extends r.a.Component{constructor(e){super(e)}componentDidMount(){document.querySelectorAll("span[data-updated-text]").forEach(e=>e.setAttribute("style","display:none"))}render(){return r.a.createElement("div",{style:{position:"fixed",left:0,fontSize:"16px",top:0,width:"100vw",height:"84px",overflowY:"auto",zIndex:9999,backgroundColor:"white",boxShadow:"0 0 5px #00000080"}},r.a.createElement("header",{style:{width:"100%",height:"84px",display:"flex",justifyContent:"space-between",alignItems:"center",position:"absolute",color:"#BFBFBF",left:0,right:0,top:0,zIndex:1}},r.a.createElement("div",{className:"header-left",style:{paddingLeft:"48px",display:"flex",justifyContent:"flex-start",alignItems:"center",fontWeight:600}},r.a.createElement("a",{href:"/",style:{fontSize:"1.6rem",color:"#1D39C4",marginRight:"167px"}},"Nebula"),r.a.createElement("span",{style:{width:"1px",height:"2rem",borderRight:"1px solid #BFBFBF"}}),r.a.createElement("a",{href:"/examples",style:{marginLeft:"2.8vw",color:"examples"===this.props.subject?"#1D39C4":"inherit"}},"Examples"),r.a.createElement("a",{href:"/survey",style:{marginLeft:"2.8vw",color:"survey"===this.props.subject?"#1D39C4":"inherit"}},"Survey")),r.a.createElement("div",{className:"header-right",style:{paddingLeft:"48px",display:"flex",justifyContent:"flex-end",alignItems:"center",fontWeight:600}},r.a.createElement("a",{href:"https://github.com/nebula-vis/Nebula",style:{color:"inherit",marginRight:"2.8vw"}},"Github"))))}}}}]);